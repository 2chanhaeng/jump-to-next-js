// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("PRISMA_URL")
  directUrl    = env("PLANET_URL")
  relationMode = "prisma"
}

model Question {
  id        String   @id @default(nanoid())
  subject   String
  content   String
  createdAt DateTime @default(now())
  answers   Answer[]
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String

  @@unique([id, userId], name: "ownership")
  @@index([userId])
  @@fulltext([subject, content])
}

model Answer {
  id         String   @id @default(nanoid())
  content    String
  createdAt  DateTime @default(now())
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String

  @@unique([id, userId], name: "ownership")
  @@index([userId])
  @@index([questionId])
}

model Credential {
  id       String @id @default(cuid())
  username String @unique
  password String
  salt     String

  @@unique([username, password], name: "credentials")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  questions     Question[]
  answers       Answer[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
